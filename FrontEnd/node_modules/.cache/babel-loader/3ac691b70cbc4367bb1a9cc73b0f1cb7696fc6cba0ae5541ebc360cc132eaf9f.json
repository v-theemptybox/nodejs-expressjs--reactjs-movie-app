{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\FullstackJS\\\\NJS301x_1.0-A_VN\\\\Assignments\\\\Assignment01\\\\FrontEnd\\\\src\\\\components\\\\search\\\\SearchResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\nimport requests from \"../../utils/requests\";\nimport \"./SearchResult.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst SearchResult = ({\n  query\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const url = `${requests.fetchSearch}`;\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.post(url, {\n        keyword: query[0],\n        req_media_type: query[1],\n        req_language: query[2],\n        req_year: +query[3],\n        req_genre: +query[4]\n      }, {\n        headers: {\n          Authorization: \"8qlOkxz4wq\"\n        }\n      });\n      setMovies(request.data.results);\n      return request;\n    }\n    if (query) {\n      fetchData();\n    } else {\n      setMovies([]);\n    }\n  }, [url, query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Search Result\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters search-resul-container sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      className: `row_poster row_posterLarge`,\n      src: `${base_url}${movie.poster_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n_s(SearchResult, \"zKZz1ToLhZof55wW29gLg0w7E+8=\");\n_c = SearchResult;\nexport default SearchResult;\nvar _c;\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"names":["React","useState","useEffect","axios","requests","base_url","SearchResult","query","_s","movies","setMovies","message","setMessage","url","fetchSearch","fetchData","request","post","keyword","req_media_type","req_language","req_year","req_genre","headers","Authorization","data","results","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","key","id","src","poster_path","alt","name","_c","$RefreshReg$"],"sources":["D:/study/FullstackJS/NJS301x_1.0-A_VN/Assignments/Assignment01/FrontEnd/src/components/search/SearchResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"../../utils/axios\";\nimport requests from \"../../utils/requests\";\n\nimport \"./SearchResult.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nconst SearchResult = ({ query }) => {\n  const [movies, setMovies] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const url = `${requests.fetchSearch}`;\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.post(\n        url,\n        {\n          keyword: query[0],\n          req_media_type: query[1],\n          req_language: query[2],\n          req_year: +query[3],\n          req_genre: +query[4],\n        },\n        {\n          headers: { Authorization: \"8qlOkxz4wq\" },\n        }\n      );\n\n      setMovies(request.data.results);\n\n      return request;\n    }\n\n    if (query) {\n      fetchData();\n    } else {\n      setMovies([]);\n    }\n  }, [url, query]);\n\n  return (\n    <div className=\"row\">\n      <h2>Search Result</h2>\n      <div className=\"row_posters search-resul-container sc2\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              className={`row_poster row_posterLarge`}\n              src={`${base_url}${movie.poster_path}`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,OAAO,oBAAoB;AAE3B,MAAMC,QAAQ,GAAG,qCAAqC;AAEtD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,GAAG,GAAI,GAAET,QAAQ,CAACU,WAAY,EAAC;EACrCZ,SAAS,CAAC,MAAM;IACd,eAAea,SAASA,CAAA,EAAG;MACzB,MAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC9BJ,GAAG,EACH;QACEK,OAAO,EAAEX,KAAK,CAAC,CAAC,CAAC;QACjBY,cAAc,EAAEZ,KAAK,CAAC,CAAC,CAAC;QACxBa,YAAY,EAAEb,KAAK,CAAC,CAAC,CAAC;QACtBc,QAAQ,EAAE,CAACd,KAAK,CAAC,CAAC,CAAC;QACnBe,SAAS,EAAE,CAACf,KAAK,CAAC,CAAC;MACrB,CAAC,EACD;QACEgB,OAAO,EAAE;UAAEC,aAAa,EAAE;QAAa;MACzC,CACF,CAAC;MAEDd,SAAS,CAACM,OAAO,CAACS,IAAI,CAACC,OAAO,CAAC;MAE/B,OAAOV,OAAO;IAChB;IAEA,IAAIT,KAAK,EAAE;MACTQ,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACLL,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC,EAAE,CAACG,GAAG,EAAEN,KAAK,CAAC,CAAC;EAEhB,oBACEP,KAAA,CAAA2B,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBlC,KAAA,CAAA2B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,eAAiB,CAAC,eACtBlC,KAAA,CAAA2B,aAAA;IAAKC,SAAS,EAAC,wCAAwC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpDzB,MAAM,CAAC0B,GAAG,CAAEC,KAAK,IAAK;IACrB,oBACEpC,KAAA,CAAA2B,aAAA;MACEU,GAAG,EAAED,KAAK,CAACE,EAAG;MACdV,SAAS,EAAG,4BAA4B;MACxCW,GAAG,EAAG,GAAElC,QAAS,GAAE+B,KAAK,CAACI,WAAY,EAAE;MACvCC,GAAG,EAAEL,KAAK,CAACM,IAAK;MAAAb,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACjB,CAAC;EAEN,CAAC,CACE,CACF,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAlDIF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAoDlB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}